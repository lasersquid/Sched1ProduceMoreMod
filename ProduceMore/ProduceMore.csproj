<Project>
	<!-- An empty project tag allows us to set properties before paths in Sdk.props are set. -->
	<PropertyGroup>
		<ProjName>ProduceMore</ProjName>
		<GameVer>il2cpp</GameVer>
		<Version>1.0.5</Version>
		<GameDir>C:\Program Files (x86)\Steam\steamapps\common\Schedule I</GameDir>
		<GamePath>$(GameDir)\Schedule I.exe</GamePath>

		<BaseOutputPath>$(MSBuildProjectDirectory)\bin</BaseOutputPath>
		<BaseIntermediateOutputPath>$(MSBuildProjectDirectory)\obj\$(GameVer)</BaseIntermediateOutputPath>
		<ProjectAssetsFile>$(BaseIntermediateOutputPath)\project.assets.json</ProjectAssetsFile>
		<ProjectAssetsCacheFile>$(BaseIntermediateOutputPath)\cache\$(MSBuildProjectName).assets.cache</ProjectAssetsCacheFile>
		<MSBuildProjectExtensionsPath>$(BaseIntermediateOutputPath)</MSBuildProjectExtensionsPath>
	</PropertyGroup>

	<!-- This import is required before the remaining contents of our project file. -->
	<Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

	<!-- Conditionally set some properties depending on GameVer. -->
	<PropertyGroup Condition="'$(GameVer)'=='il2cpp'">
		<TargetFramework>net6</TargetFramework>
		<AssemblyName>$(ProjName)IL2CPP</AssemblyName>
	</PropertyGroup>

	<PropertyGroup Condition="'$(GameVer)'=='mono'">
		<TargetFramework>netstandard2.1</TargetFramework>
		<AssemblyName>$(ProjName)Mono</AssemblyName>
	</PropertyGroup>

	<PropertyGroup>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>disable</Nullable>
		<RootNamespace>$(ProjName)</RootNamespace>
		<LangVersion>default</LangVersion>
		<IsPackable>false</IsPackable>
		<AssemblyVersion>$(VersionString)</AssemblyVersion>
		<FileVersion>$(VersionString)</FileVersion>
		<NeutralLanguage>en-US</NeutralLanguage>
		<LangVersion>latest</LangVersion>
		<ImplicitUsings>enable</ImplicitUsings>
		<Configurations>Debug;Release</Configurations>
	</PropertyGroup>

	<!-- Hide libs directory of other GameVer -->
	<ItemGroup Condition="'$(GameVer)'=='mono'">
		<EmbeddedResource Remove="il2cpp_libs\**" />
		<None Remove="il2cpp_libs\**" />
	</ItemGroup>
	<ItemGroup Condition="'$(GameVer)'=='il2cpp'">
		<EmbeddedResource Remove="mono_libs\**" />
		<None Remove="mono_libs\**" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Remove="bin\**" />
		<EmbeddedResource Remove="obj\**" />
		<EmbeddedResource Remove="package\**" />
		<EmbeddedResource Remove="package_resources\**" />
		<None Remove="bin\**" />
		<None Remove="obj\**" />
		<None Remove="package\**" />
		<None Remove="package_resources\**" />
	</ItemGroup>

	<ItemGroup>
		<Reference Include="0Harmony">
		  <HintPath>il2cpp_libs\0Harmony.dll</HintPath>
		</Reference>
		<Reference Include="Assembly-CSharp">
			<HintPath>il2cpp_libs\Assembly-CSharp.dll</HintPath>
		</Reference>
		<Reference Include="Il2CppFishNet.Runtime">
			<HintPath>il2cpp_libs\Il2CppFishNet.Runtime.dll</HintPath>
		</Reference>
		<Reference Include="Il2CppInterop.Runtime">
			<HintPath>il2cpp_libs\Il2CppInterop.Runtime.dll</HintPath>
		</Reference>
		<Reference Include="Il2Cppmscorlib">
			<HintPath>il2cpp_libs\Il2Cppmscorlib.dll</HintPath>
		</Reference>
		<Reference Include="Unity.TextMeshPro">
		  <HintPath>il2cpp_libs\Unity.TextMeshPro.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine">
			<HintPath>il2cpp_libs\UnityEngine.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.AIModule">
		  <HintPath>il2cpp_libs\UnityEngine.AIModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.AnimationModule">
		  <HintPath>il2cpp_libs\UnityEngine.AnimationModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.CoreModule">
			<HintPath>il2cpp_libs\UnityEngine.CoreModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.PhysicsModule">
		  <HintPath>il2cpp_libs\UnityEngine.PhysicsModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UI">
		  <HintPath>il2cpp_libs\UnityEngine.UI.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UIModule">
		  <HintPath>il2cpp_libs\UnityEngine.UIModule.dll</HintPath>
		</Reference>

	</ItemGroup>

	<PropertyGroup>
		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
		<EnableDefaultCompileItems>false</EnableDefaultCompileItems>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="Mod.cs" />
		<Compile Include="ProduceMore.cs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="LavaGang.MelonLoader" Version="0.7.0" />
		<PackageReference Include="Microsoft.Diagnostics.Runtime" Version="3.1.512801" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
	</ItemGroup>

	<PropertyGroup Condition="'$(GameVer)'=='mono'">
		<DefineConstants>$(DefineConstants);MONO_BUILD;</DefineConstants>
	</PropertyGroup>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="Powershell .\package_resources\MakeVortexPackage.ps1 -arch $(GameVer) -ver $(Version) -proj $(ProjName)&#xD;&#xA;Powershell .\package_resources\MakeThunderstorePackage.ps1 -arch $(GameVer) -ver $(Version) -proj $(ProjName)&#xD;&#xA;del &quot;$(GameDir)\mods\$(ProjName)*.dll&quot;&#xD;&#xA;copy &quot;bin\Debug\$(TargetFramework)\$(AssemblyName).dll&quot; &quot;$(GameDir)\mods\&quot;&#xD;&#xA;" />
	</Target>

	<!-- This import is required here if we use a Project tag with no properties -->
	<Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>